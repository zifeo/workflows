name: Test and release

on:
  workflow_call:
    inputs:
      python-matrix:
        required: true
        type: string
      poetry-version:
        required: true
        type: string
      python-version:
        required: true
        type: string
      publish-docker:
        required: false
        type: boolean
        default: false
    secrets:
      pypi-token:
        required: false

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ fromJSON(inputs.python-matrix) }}

    steps:
      - name: Check out
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ inputs.poetry-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          poetry install --extras all   
      - name: Run pre-commit
        uses: pre-commit/action@v2.0.0
      - name: Start containers
        run: docker-compose up -d
      - name: Run tests
        run: |
          poetry run pytest -s tests
      - name: Stop containers
        if: always()
        run: |
          docker-compose down
      - name: Build docker image
        run: |
          docker build . --build-arg PYTHON_VERSION=${{ matrix.python-version }} -t test

  release-check:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    outputs:
      release: ${{ steps.check.outputs.release }}

    steps:
      - name: Check out
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ inputs.python-version }}
      - name: Install poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ inputs.poetry-version }}
      - name: Check release
        id: check
        run: |
          PACKAGE="$(poetry version)"
          NAME=${PACKAGE% *}
          VERSION=${PACKAGE#* }
          ALREADY_RELEASED=$(curl -s https://pypi.org/pypi/$NAME/json | jq ".releases | keys | any(. == \"$VERSION\")")
          echo "::set-output name=release::$([[ "$ALREADY_RELEASED" == "true" ]] && echo "" || echo $VERSION)"

  release:
    needs: release-check
    runs-on: ubuntu-latest
    if: needs.release-check.outputs.release != '' && (${{ secrets.pypi-token }} != '' || ${{ inputs.publish-docker }})

    steps:
      - name: Check out
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ inputs.python-version }}
      - name: Install poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ inputs.poetry-version }}
      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build docker image
        if: inputs.publish-docker
        run: |
          docker build . --build-arg PYTHON_VERSION=${{ inputs.python-version }} -t ghcr.io/${{ github.repository }}:${{ needs.release-check.outputs.release }}
      - name: Publish to PyPI
        if: secrets.pypi-token != ''
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.pypi-token }}
        run: |
          python -m pip install --upgrade pip
          poetry install --extras all
          poetry build
          poetry publish
      - name: Push to Github Packages
        if: inputs.publish-docker
        run: |
          docker push ghcr.io/${{ github.repository }}:${{ needs.release-check.outputs.release }}
      - uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: v${{ needs.release-check.outputs.release }}
      - name: GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ needs.release-check.outputs.release }}
          tag_name: v${{ needs.release-check.outputs.release }}
          body: |
            See [changelog](https://github.com/${{ github.repository }}/blob/v${{ needs.release-check.outputs.release }}/CHANGELOG.md).
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
